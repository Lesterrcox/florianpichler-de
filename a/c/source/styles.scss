/*! florianpichler.de - made by @pichfl in 2013 */

@import "normalize";
@import "bourbon/bourbon";

// Variables

$bg: #3b4652;
$bg-card: #f7f7f5;
$fg: saturate(tint($bg, 50%), 5%);
$fg-card: desaturate(tint($bg, 20%), 10%);
$hl: #dc281e;

$fnt: 13px;
$small: $fnt - 2px;
$lh: round(1.6 * $fnt) / $fnt * 1em;
$lhsmall: round(1.6 * $fnt) / $small * 1em;
$fw: 400;

$max-width: 18 * $lh;

// Mixins

@mixin keyframes($name) {
	@-webkit-keyframes #{$name} { @content; }
	@-moz-keyframes #{$name} { @content; }
	@-o-keyframes #{$name} { @content; }
	@keyframes #{$name} { @content; }
}

// Global

html, body {
	background: $bg;
	color: shade($fg, 10%);
	font: $fw #{$fnt}/#{$lh} "Avenir Next", AvenirNext, Avenir, "gill sans", "gill sans mt", Calibri, sans-serif;
	-webkit-tap-highlight-color: rgba(255,255,255,0.0);
}

body {
	padding: 10px;
}

section, aside {
	max-width: $max-width;
	margin: 0 auto;
}

section {
	overflow: hidden;
	padding: $lh 1.5 * $lh 2 * $lh;

	&.elsewhere {
		max-width: $max-width + 3 * $lh;
		padding: $lh 0;
	}
}

aside{
	margin-top: $lh;
	padding: 0 1.5 * $lh;
}

h1, h2, h3, strong {
	font-weight: $fw;
}

h1, h2, header p, footer {
	font-size: $small/$fnt * 1em;
	line-height: $lhsmall;
	text-transform: uppercase;
	letter-spacing: 2px/$small * 1em;
	font-weight: $fw + 100;
}

h1, h2{
	clear: both;
	margin: 2*$lh auto $lh;
}

h2 {
	aside &{
		margin-top: 0;
	}

	.elsewhere &{
		padding: 0 1.5 * $lhsmall;
	}
}

ul, header {
	margin: 0 auto $lh;
}

p {
	margin: 0;

	& + p {
		text-indent: $lh;
	}
}

footer{
	display: block;
	margin: 0.5 * $lh 0 0;
}

header{
	position: relative;
	padding: $lh 0 0.5 * $lh;

	&, & a {
		color: $hl !important;
	}

	h1, p {
		display: inline;
	}

	&:before{
		left: -1.5 * $lh;
	}

	&:after{
		right: -1.5 * $lh;
	}
}

header, .front{
	position: relative;

	&:before, &:after{
		position: absolute;
		top: 1.3 * $lh;
		display: block;
		width: 0;
		height: 0;
		background: $hl;
		content: "";
		overflow: hidden;
		border: 4px/$fnt * 1em solid $hl;

		@include transition(border-width 0.5s ease);

	}

	&:hover {
		&:before {
			border-right-color: #fff;
		}
		&:after{
			border-left-color: #fff;
		}
	}
}

a{
	&, &:link, &:visited {
		text-decoration: none;
		color: saturate(tint($bg, 60%), 5%);
	}

	&:focus, &:hover {
		color: saturate(tint($bg, 85%), 25%);
	}

	&:active {
		color: $hl;
	}
}

.vcard {
	background: $bg-card;
	color: $fg-card;
	margin: 0 auto;

	a{
		&, &:link, &:visited {
			color: saturate(tint($bg, 30%), 15%);
		}
		&:focus, &:hover, &:active {
			color: $hl;
		}
	}
}

.adr{
	display: block;
	margin: 0 auto $lh;
}

.type{
	@include inline-block;
	width: 4em;
}

ul {
	position: relative;
	margin: 0 0 $lh;
	padding: 0 0 1px;
	list-style: none;

	@include clearfix;

	li {
		margin: 0 0 -1px;
		padding: 1px 0;
		border-top: 1px solid saturate(tint($bg, 10%), 5%);
		border-bottom: 1px solid saturate(tint($bg, 10%), 5%);
	}

	a {
		display: block;
		padding: 2px/$fnt * 1em 1.5 * $lh 1px/$fnt * 1em;
	}

}

.s {
	margin: 0 -1% 0;
	li {
		float: left;
		width: 48%;
		margin: 0 1% -1px;
	}
}

.l {
	a {
		&, &:link, &:visited {
			color: shade($fg, 10%);
		}

		strong, &:focus, &:hover {
			color: saturate(tint($bg, 60%), 5%);
		}

		&:focus, &:hover {
			strong{
				color: saturate(tint($bg, 85%), 25%);
			}
		}

		&:active, &:active strong {
			color: $hl;
		}
	}
}

// Desktop

@media all and (max-width: 639px) {
	header p{
		display: block;
	}

	ul a{
		padding: 8px/$fnt * 1em 1.5 * $lh 7px/$fnt * 1em;
	}
}

@media all and (min-width: 640px) {

	header {
		p {
			&:before{
				margin: 0 0px/$fnt * 1em 0 3px/$fnt * 1em;
				content: " Â· ";
			}
		}
	}

	section {
		padding: $lh 2.5 * $lh 2 * $lh;

		&.elsewhere {
			max-width: $max-width + 5 * $lh;

			h2{
				padding: 0 2.5 * $lhsmall;
			}
		}
	}

	aside{
		padding: 0 2.5 * $lh;
	}

	ul {
		a {
			padding: 2px/$fnt * 1em 2.5 * $lh 1px/$fnt * 1em;
		}
	}

	.adr{
		width: 50%;
		float: left;
	}

	.card {
		position: relative;
		width: $max-width + 5 * $lh;
		height: 11 * $lh;
		margin: 0 auto;
		@include animation(wiggle 10s infinite);
	}

	.positioned {
		@include transition (height 0.5s $ease-in-back, margin-top 0.5s);
	}

	.flip {
		@include transition (height 0.65s $ease-out-back, margin-top 0.65s);
		@include animation(none);
	}

	.front {
		width: 100%;
		height: 11 * $lh;
		background: $bg-card url(../i/logo@2x.png) 50% 3.5*$lh no-repeat;
		background-size: 320px 90px;

		&:before, &:after {
			top: 6.95 * $lh;
		}

		&:before{
			left: 0;
		}

		&:after{
			right: 0;
		}
	}

	header {
		&:before{
			left: -2.5 * $lh;
		}

		&:after{
			right: -2.5 * $lh;
		}
	}

	header, .front {
		cursor: pointer;
	}

	.csstransforms3d {

		.card {
			@include transform-origin(center);
			@include transform(translate3d(0,0,0));
			@include prefixer(perspective, 3000, webkit moz spec);
			@include prefixer(transform-style, preserve-3d, webkit moz spec);

			.front, .back {
				position: absolute;
				overflow: hidden;
				@include transform-origin(center);
				@include transition(-webkit-transform 1s ease);
				@include transition(-moz-transform 1s ease);
				@include transition(transform 1s ease);
				@include prefixer(backface-visibility, hidden, webkit moz spec);
				@include prefixer(transform-style, preserve-3d, webkit moz spec);
			}
		}

		.flip .front{
			@include transform(rotateY(180deg));
		}

		.back {
			@include transform(rotateY(-180deg));
		}

		.flip .back, .front {
			 @include transform(rotateY(0deg));
		}
	}

	aside {
		position: relative;

		.inner {
			opacity: 0;
			@include transition(opacity 0.5s 0s ease);
		}
	}

	$large: 20px/$fnt * 1em;
	$large-lh: round(1.6 * $fnt) / ($large * $fnt / 1em) * 1em;

	.toggle {
		position: absolute;
		cursor: pointer;
		left: 0;
		right: $lh;
		z-index: 1;
		-webkit-user-select: none;

		i{
			position: relative;
			left: 50%;
			display: block;
			width: $large-lh;
			margin: 0 0 0 -1 * $large-lh;
			padding: 0 $large-lh;
			font: 700 italic #{$large}/#{$large-lh} Baskerville, "Baskerville old face", "Hoefler Text", Garamond, "Times New Roman", serif;
			text-align: center;

			@include transition(left 0.5s 0.3s ease);
		}

		&:hover{
			& + .inner h2, i {
				color: #fff;
			}
		}
	}

	.show {
		.toggle {
			i {
				left: $large-lh * 1.25;

				@include transition(left 0.5s 0s ease);
			}
		}

		.inner {
			opacity: 1.0;
			@include transition(opacity 0.5s 0.3s ease);
		}
	}
}

@include keyframes(wiggle) {
	0%, 48%, 52%, 100% {
		@include transform(rotate(0deg));
	}
	50% {
		@include transform(rotate(1deg));
	}
}
